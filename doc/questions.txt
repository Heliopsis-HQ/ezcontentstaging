GG, 15.10.2011

. [side note] does webdav code trigger all content related operations? it seems it eg. skips calls to delete...

. update-priority event: shall we show it as needing sync on the parent node or on the children nodes?
  after all, it is the children nodes that change their property, even though the action is carried out in the parent...

. is the delete trigger related to deleting nodes or objects ??? for our purposes, relating it to an obj is simpler,
  but we need to check exactly when it is triggered by eZ
  we'll have to test:
  - when deleting a 2ndary node without children, the node is dleted via removelocation
  - when deleting a 2ndary node with children, ...
  - when deleting a 1ary node with children, ...
  - when deleting a 1ary node without children, ...
  - is it possible at all to remove in a single php call one object that has many locations? what events will this triger?

- the updatealwaysavailable event is transformed into a content editing action on target server.
  This might create more versions on target than on source. Is it acceptable?

- main node: what if a target server includes the copy of the secondary node of an object but not the copy of its main node?

GG, 7.10.2011

. when synchronizing many items, is it ok to sort by item creation, or should we sort
  by event creation? We have to think about nodes being moved, deleted, etc...

  Following the same vein: what if the editor tries to sync creation of a node
  without having synced creation of its parent? How to handle dependencies?

. how to bootstrap the process? The top level nodes in the feed have to exist
  on both sides, or the feed needs to have the remote-server ID known for them

  a: set remote id of remote top-level nodes (has to be saved in ini)
     but then what about updating them? we need to sync remote_id of remote root parent too
  
. some editing actions are in fact applied to nodes, some other to objects.
  eg: hiding a node applies to a node, while adding a location or setting state applies to
  an object.
  - when using the ezwt toolbar, and an object state needs to be synchronized, shall the 'sync'
    action be shown on every node of that object or only on the main node?
  - when browsing the list of items to sync in the backoffice, which nodes shall be listed in
    such case?

. q: always store a lot of object data in events, in case obj is deleted later and we want to show meaningful data in control panels?


GG, 4.10.2011

. decide on naming: feed vs target

. decide on format for results of sync calls: a string or structured data? who translates this: view or tpl?


GG, 24.9.2011

- shall we implement fetches for controlpanel and dashboard as custom attribute filters?
  it seems there is a requirement here (in the alti templates) that was not clear in the spec: show items
  to be synced in a single content subtree.
  I would have instead used simple fetches on the sync table to get the list of
  items to show - but in such case there is no subtree limit applied

- take care about deleted objects to be synced, if doing node fetches: they have no node anymore,
  hence a single (node) fetch on nodes cannot find them. Also if we want to show
  their name, author, we must store this data in the sync_items table

- take care about permissions in such fetches: if a node has been hidden or is not
  available anymore to current user due to a permission pbl (eg section change),
  the user should still be able to trigger sync for it or not? and what about a
  node that never was visible to current user?

- shall we implement "stop trying to sync an obj after 3 failures" now or in phase 2?

- shall we implement a "status" col in the items table, so that it is set to "pending"
  while attempting an update, and no 2 updates are tried at the same time?

- syncing a single object from the ezwebin toolbar: use ezjscore, a plain module/view, rest, ... ?

- "sync" icon in ezwt toolbar: what shall we show in different cases?
  1. user has no rights to see sync state => show nothing
  1. user has sync rights, obj might need sync or not => 2 icons
  2. user has rights to see sync state but not to sync, obj needs sync or not => use same 2 icons but no link, or different ones?

- management of target hosts: shall we put it in a db table with editing interface
  or in an ini settings file?
  A: start with ini, but wrap it up in a content class

- shall we store in sync table (eg. in a data_text column) the list of things to
  be synced, in detail? (eg. list of nodes to be added or removed, vs. every time
  that there is a node change, resync complete list of nodes for object) ?
  We definitely need to look at rest api for this

JLemaitre, 13.9.2011

	Dear all,

	I have beginned to develop the staging UI and I have some questions.

	Do we integrate the staging feature as a content module extension. In this case :
		> the policyList should be something like "content/controlpanel or in a new module as "staging/controlpanel"

		> we will use a fetch fonction like :
			{def $all_sync_content = fetch( 'content', 'sync', hash( 'parent_node_id',   ezini( 'NodeSettings', 'RootNode', 'content.ini' ),
															   'limit',            $block.number_of_items,
															   'main_node_only',   true(),
															   'attribute_filter', array( array( 'synchronization_state', '!=', 'synchronized' ) )
																) )}
			et aussi la méthode
			{def $list_count = fetch('content', 'sync_count' , hash( 'parent_node_id',   ezini( 'NodeSettings', 'RootNode', 'content.ini' ),
															   'limit',            $block.number_of_items,
															   'main_node_only',   true(),
															   'attribute_filter', array( array( 'synchronization_state', '!=', 'synchronized' ) )
																) )}
		> Node will need have new attributes like can_sync, synchronization_state and synchronization_date
			The synchronisation_state could be : Added / modified / deleted / hidden / visible / archived / synchronized

	To establish the synchronisation with my UI, I need REST services to add/update/delete/archive/hidden content

	Do you share the same point of view as me or do you prefer something else ?

	Where, should I depose my code ? on Git ?
