. fix setsection workflow event: it creates one staging event too much

. finish js code used by ajax calls for ezwt

. proper policy checking before allowing sync calls (eg. in "feed" view)

. settle on naming conventions (user-side), rewrite all text labels in templates

. settle on set of sync icons: needs to sync, is syncing, no need to sync

. settle on list of cols available in feed view and in dashboard block; make sure that it works ok for items relating to deleted nodes (showing enough info)

. reset all calls to ez18n to use a single namespace: contentstating/etc...

. produce .dba file

. fix: it seems the target (almost persistent) object has problems in feeds tpl

. in wt tpl, try to filter out items in syncing status (show a different icon, do not allow to sync)

. for ezp 4.6, add a new subtab in object view for admin design

. cleanup script that resets and initializes feeds. Also via gui (in "feeds" view)
  Feed initailization is done:
  - storing in ini file node_id on remmote server for all sourcenodes
  - adding to stream of feed events one setobjremoteid and one setobjremoteid events

. dependency tracking:
  - all events should not have a pending create event for any of their parents
  - obj relations?
  - set section: should not have a pending set section for one of its parents (nb: even for 2ndary locations? test it)
  - hide: should not have a pending set section for one of its parents

. tpl operator for sync type icon (or text) by its code

. rework dashboard block so that it lists nodes instead of sync events?
  note that we will have problems with deleted objects not being shown there

. verify events that need to happen before action: are we sure that after trigger action can not be skipped (eg: because of some perms checking?).
  Try to move them to "after" (eventually, patch operations: content/hide, )

. use some "struct" classes to hold data for every type of stagingevent instead of plain arrays, to make the kind of data expeted more evident


Phase 2:

. in feed view, add an action to init a feed (eg set all objects to "to be synced" status)
. allow sync items that fail 3 consecutive sync attempts to be set to "suspended" state
. allow finer grained permissions (sync per feed)
. cronjob that passes and removes/resets sync items that have been in sync status for too long
. allow user with 'manage' rights to manually remove sync items from feeds, one by one, if they want to (but trace it)
. coalescing of sync events
. add a sync-to-localhost transport class, that copies data to separate content trees
. graceful degradation: allow wt button to rate with no js by posting to contentstaging/syncnode
. add extended attr. filter: given target feed id, get for every node the sync events pending by using aggregate sql function bit_and
